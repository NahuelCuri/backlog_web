{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/Documents/proyectos/Games to Play web/backlog/src/Components/RowList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Row from './Row';\nimport RowFilter from './RowFilter';\nimport './RowList.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowList() {\n  _s();\n  const [rows, setRows] = useState([]);\n\n  // useEffect(() => {\n  //   const initialRows = Array.from({ length: 5 }, (_, index) => createRow(index));\n  //   setRows(initialRows);\n  // }, []);\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/games').then(response => {\n      setRows(response.data);\n    }).catch(error => {\n      console.error('Error fetching game list: ');\n    });\n  }, []);\n  const createRow = index => ({\n    title: `title ${index}`,\n    genre: `genre ${index}`,\n    releaseDate: `releaseDate ${index}`,\n    htlb: `htlb ${index}`,\n    timePlayed: `timePlayed ${index}`,\n    status: `status ${index}`,\n    score: `score ${index}`\n  });\n  const addRow = () => {\n    setRows([...rows, createRow(rows.length)]);\n  };\n  const getRows = () => {\n    return rows.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      ...row\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rowList\",\n    children: [/*#__PURE__*/_jsxDEV(RowFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), getRows(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(RowList, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = RowList;\nexport default RowList;\nvar _c;\n$RefreshReg$(_c, \"RowList\");","map":{"version":3,"names":["React","useState","useEffect","Row","RowFilter","axios","jsxDEV","_jsxDEV","RowList","_s","rows","setRows","get","then","response","data","catch","error","console","createRow","index","title","genre","releaseDate","htlb","timePlayed","status","score","addRow","length","getRows","map","row","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["/home/nahuel/Documents/proyectos/Games to Play web/backlog/src/Components/RowList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Row from './Row';\nimport RowFilter from './RowFilter';\nimport './RowList.css';\n\nimport axios from 'axios';\n\nfunction RowList() {\n  const [rows, setRows] = useState([]);\n\n  // useEffect(() => {\n  //   const initialRows = Array.from({ length: 5 }, (_, index) => createRow(index));\n  //   setRows(initialRows);\n  // }, []);\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/games')\n        .then(response => {\n          setRows(response.data);\n        })\n        .catch(error => {\n          console.error('Error fetching game list: ')\n        })\n  }, []);\n\n  const createRow = (index) => ({\n    title: `title ${index}`,\n    genre: `genre ${index}`,\n    releaseDate: `releaseDate ${index}`,\n    htlb: `htlb ${index}`,\n    timePlayed: `timePlayed ${index}`,\n    status: `status ${index}`,\n    score: `score ${index}`\n  });\n\n  const addRow = () => {\n    setRows([...rows, createRow(rows.length)]);\n  };\n\n  const getRows = () => {\n    return rows.map((row, index) => (\n      <Row key={index} {...row} />\n    ));\n  };\n\n  return (\n    <div className=\"rowList\">\n      <RowFilter />\n      {getRows()}\n      <button onClick={addRow} style={{ marginTop: '10px' }}>Add Row</button>\n    </div>\n  );\n}\n\nexport default RowList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,eAAe;AAEtB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACdG,KAAK,CAACO,GAAG,CAAC,iCAAiC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAI;MAChBH,OAAO,CAACG,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;IAC7C,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAIC,KAAK,KAAM;IAC5BC,KAAK,EAAE,SAASD,KAAK,EAAE;IACvBE,KAAK,EAAE,SAASF,KAAK,EAAE;IACvBG,WAAW,EAAE,eAAeH,KAAK,EAAE;IACnCI,IAAI,EAAE,QAAQJ,KAAK,EAAE;IACrBK,UAAU,EAAE,cAAcL,KAAK,EAAE;IACjCM,MAAM,EAAE,UAAUN,KAAK,EAAE;IACzBO,KAAK,EAAE,SAASP,KAAK;EACvB,CAAC,CAAC;EAEF,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACnBjB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAES,SAAS,CAACT,IAAI,CAACmB,MAAM,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAOpB,IAAI,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEZ,KAAK,kBACzBb,OAAA,CAACJ,GAAG;MAAA,GAAiB6B;IAAG,GAAdZ,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAC5B,CAAC;EACJ,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB/B,OAAA,CAACH,SAAS;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACZN,OAAO,CAAC,CAAC,eACVvB,OAAA;MAAQgC,OAAO,EAAEX,MAAO;MAACY,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAAC3B,EAAA,CA7CQD,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA+ChB,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}