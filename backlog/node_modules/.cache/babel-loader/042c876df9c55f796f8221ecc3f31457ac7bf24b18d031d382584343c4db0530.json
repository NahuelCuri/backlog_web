{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/Documents/proyectos/Games to Play web/backlog/src/Components/RowList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Row from './Row';\nimport RowFilter from './RowFilter';\nimport './RowList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowList() {\n  _s();\n  const [numRows, setNumRows] = useState(5); // Initial number of rows\n  const [sortKey, setSortKey] = useState(null);\n  const addRow = () => {\n    setNumRows(numRows + 1);\n  };\n  const handleSortChange = key => {\n    setSortKey(key);\n  };\n  const getSortedRows = () => {\n    const rows = Array.from({\n      length: numRows\n    }, (_, index) => ({\n      title: `title ${index}`,\n      genre: `genre ${index}`,\n      releaseDate: `releaseDate ${index}`,\n      htlb: `htlb ${index}`,\n      timePlayed: `timePlayed ${index}`,\n      status: `status ${index}`,\n      score: `score ${index}`\n    }));\n    if (sortKey) {\n      rows.sort((a, b) => a[sortKey] > b[sortKey] ? 1 : -1);\n    }\n    return rows.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      ...row\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rowList\",\n    children: [/*#__PURE__*/_jsxDEV(RowFilter, {\n      onSortChange: handleSortChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), getSortedRows(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RowList, \"/qmoLQpPszBR4qPJ7xL5D8uOJmM=\");\n_c = RowList;\nexport default RowList;\nvar _c;\n$RefreshReg$(_c, \"RowList\");","map":{"version":3,"names":["React","useState","Row","RowFilter","jsxDEV","_jsxDEV","RowList","_s","numRows","setNumRows","sortKey","setSortKey","addRow","handleSortChange","key","getSortedRows","rows","Array","from","length","_","index","title","genre","releaseDate","htlb","timePlayed","status","score","sort","a","b","map","row","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSortChange","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["/home/nahuel/Documents/proyectos/Games to Play web/backlog/src/Components/RowList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Row from './Row';\nimport RowFilter from './RowFilter';\nimport './RowList.css';\n\nfunction RowList() {\n  const [numRows, setNumRows] = useState(5); // Initial number of rows\n  const [sortKey, setSortKey] = useState(null);\n\n  const addRow = () => {\n    setNumRows(numRows + 1);\n  };\n\n  const handleSortChange = (key) => {\n    setSortKey(key);\n  };\n\n  const getSortedRows = () => {\n    const rows = Array.from({ length: numRows }, (_, index) => ({\n      title: `title ${index}`,\n      genre: `genre ${index}`,\n      releaseDate: `releaseDate ${index}`,\n      htlb: `htlb ${index}`,\n      timePlayed: `timePlayed ${index}`,\n      status: `status ${index}`,\n      score: `score ${index}`,\n    }));\n\n    if (sortKey) {\n      rows.sort((a, b) => (a[sortKey] > b[sortKey] ? 1 : -1));\n    }\n\n    return rows.map((row, index) => (\n      <Row key={index} {...row} />\n    ));\n  };\n\n  return (\n    <div className=\"rowList\">\n      <RowFilter onSortChange={handleSortChange} />\n      {getSortedRows()}\n      <button onClick={addRow} style={{ marginTop: '10px' }}>Add Row</button>\n    </div>\n  );\n}\n\nexport default RowList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBH,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,MAAMK,gBAAgB,GAAIC,GAAG,IAAK;IAChCH,UAAU,CAACG,GAAG,CAAC;EACjB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEX;IAAQ,CAAC,EAAE,CAACY,CAAC,EAAEC,KAAK,MAAM;MAC1DC,KAAK,EAAE,SAASD,KAAK,EAAE;MACvBE,KAAK,EAAE,SAASF,KAAK,EAAE;MACvBG,WAAW,EAAE,eAAeH,KAAK,EAAE;MACnCI,IAAI,EAAE,QAAQJ,KAAK,EAAE;MACrBK,UAAU,EAAE,cAAcL,KAAK,EAAE;MACjCM,MAAM,EAAE,UAAUN,KAAK,EAAE;MACzBO,KAAK,EAAE,SAASP,KAAK;IACvB,CAAC,CAAC,CAAC;IAEH,IAAIX,OAAO,EAAE;MACXM,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACpB,OAAO,CAAC,GAAGqB,CAAC,CAACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;IACzD;IAEA,OAAOM,IAAI,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEZ,KAAK,kBACzBhB,OAAA,CAACH,GAAG;MAAA,GAAiB+B;IAAG,GAAdZ,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAC5B,CAAC;EACJ,CAAC;EAED,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBlC,OAAA,CAACF,SAAS;MAACqC,YAAY,EAAE3B;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC5CtB,aAAa,CAAC,CAAC,eAChBV,OAAA;MAAQoC,OAAO,EAAE7B,MAAO;MAAC8B,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAJ,QAAA,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAAC9B,EAAA,CAvCQD,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAyChB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}