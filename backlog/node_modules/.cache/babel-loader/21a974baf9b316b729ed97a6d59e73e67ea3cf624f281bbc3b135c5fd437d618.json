{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/Documents/proyectos/Games to Play web/backlog/src/Components/RowList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Row from './Row';\nimport RowFilter from './RowFilter';\nimport './RowList.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowList() {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/games').then(response => {\n      console.log(\"respuesta al get: \", response.data);\n      setRows(response.data);\n    }).catch(error => {\n      console.error('Error fetching game list: ', error);\n    });\n  }, []);\n  const createRow = index => ({\n    title: `title ${index}`,\n    genre: `genre ${index}`,\n    releaseDate: `releaseDate ${index}`,\n    htlb: `htlb ${index}`,\n    timePlayed: `timePlayed ${index}`,\n    status: `status ${index}`,\n    score: `score ${index}`\n  });\n  const addRow = () => {\n    setRows([...rows, createRow(rows.length)]);\n  };\n  const getRows = () => {\n    return rows.map((row, index) => {\n      console.log(`Row ${index}:`, row); // Log completo del objeto row\n\n      // Verificación de existencia de game_status\n      if (row.hasOwnProperty('game_status')) {\n        console.log(`Row ${index} status:`, row.gameStatus); // Log específico de game_status\n      } else {\n        console.log(`Row ${index} status not found`);\n      }\n      return /*#__PURE__*/_jsxDEV(Row, {\n        title: row.title,\n        genre: row.genre,\n        releaseDate: row.release_date,\n        htlb: row.htlb,\n        timePlayed: row.time_played,\n        status: row.game_status // Aquí debe coincidir con el nombre de la propiedad en la API\n        ,\n        score: row.score\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rowList\",\n    children: [/*#__PURE__*/_jsxDEV(RowFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), getRows(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(RowList, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = RowList;\nexport default RowList;\nvar _c;\n$RefreshReg$(_c, \"RowList\");","map":{"version":3,"names":["React","useState","useEffect","Row","RowFilter","axios","jsxDEV","_jsxDEV","RowList","_s","rows","setRows","get","then","response","console","log","data","catch","error","createRow","index","title","genre","releaseDate","htlb","timePlayed","status","score","addRow","length","getRows","map","row","hasOwnProperty","gameStatus","release_date","time_played","game_status","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["/home/nahuel/Documents/proyectos/Games to Play web/backlog/src/Components/RowList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Row from './Row';\nimport RowFilter from './RowFilter';\nimport './RowList.css';\n\nimport axios from 'axios';\n\nfunction RowList() {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/games')\n        .then(response => {\n          console.log(\"respuesta al get: \", response.data);\n          setRows(response.data);\n        })\n        .catch(error => {\n          console.error('Error fetching game list: ', error);\n        });\n  }, []);\n\n  const createRow = (index) => ({\n    title: `title ${index}`,\n    genre: `genre ${index}`,\n    releaseDate: `releaseDate ${index}`,\n    htlb: `htlb ${index}`,\n    timePlayed: `timePlayed ${index}`,\n    status: `status ${index}`,\n    score: `score ${index}`\n  });\n\n  const addRow = () => {\n    setRows([...rows, createRow(rows.length)]);\n  };\n\n  const getRows = () => {\n    return rows.map((row, index) => {\n        console.log(`Row ${index}:`, row);  // Log completo del objeto row\n        \n        // Verificación de existencia de game_status\n        if (row.hasOwnProperty('game_status')) {\n            console.log(`Row ${index} status:`, row.gameStatus);  // Log específico de game_status\n        } else {\n            console.log(`Row ${index} status not found`);\n        }\n\n        return (\n            <Row \n                key={index} \n                title={row.title}\n                genre={row.genre}\n                releaseDate={row.release_date} \n                htlb={row.htlb} \n                timePlayed={row.time_played} \n                status={row.game_status}  // Aquí debe coincidir con el nombre de la propiedad en la API\n                score={row.score} \n            />\n        );\n    });\n};\n\n\n  return (\n    <div className=\"rowList\">\n      <RowFilter />\n      {getRows()}\n      <button onClick={addRow} style={{ marginTop: '10px' }}>Add Row</button>\n    </div>\n  );\n}\n\nexport default RowList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}